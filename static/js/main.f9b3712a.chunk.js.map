{"version":3,"sources":["api/users.ts","services/user.ts","components/PostForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","hasTitleErrors","setHasTitleErrors","setUserId","hasUserIdErrors","setHasUserIdErrors","action","method","event","preventDefault","completed","className","type","placeholder","value","onChange","target","disabled","map","UserInfo","href","TodoInfo","todo","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9b3712a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleErrors, setHasTitleErrors] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdErrors, setHasUserIdErrors] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleErrors(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdErrors(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleErrors(!title);\n    setHasUserIdErrors(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleErrors && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map((user: User) => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdErrors && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed, title, user, id,\n  } = todo;\n\n  return (\n    <article\n      className={`TodoInfo ${\n        completed ? 'TodoInfo--completed' : ''\n      }`}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {!!user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\nimport { Todo } from './types/Todo';\nimport { TodoForm } from './components/PostForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}